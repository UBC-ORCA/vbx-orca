Software
Running make in the software directory builds the (pseudo, not quite .coe compliant) .coe 
file needed for simulation as well as the .mem file for updating the bitstream. Make sure 
the software is up-to-date before running the simulation script. 

Simulation
To simulate, first generate the design in Vivado, the run the Vivado simulator. 
From the simulator's TCL command window, enter:
source --quiet sim.tcl
This initializes the block rams with the test.coe file in the software directory.

Block Ram Initialization
To initialize block rams, an .mmi file needs to be generated. This is done by 
entering the following commands in the implemented design tcl shell:
  source write_mmi.tcl
  write_mmi idram_gen
This will produce idram_gen.mmi in the orca/zedboard directory. To then update
a bitstream generated by the gui with the new block ram values, run 
  make bitstream
The final bitstream will be located in out.bit in the orca/zedboard/ directory.

Hardware Triggering
To begin triggering an ILA core right at startup (rather than on user input),
1) In the hardware manager tcl shell, enter the command
  run_hw_ila -force -file ila_trig.tas [get_hw_ilas hw_ila_1]
2) In the implemented design tcl shell, enter the commands
  apply_hw_ila_trigger ila_trig.tas
  write_bitstream -force trig_at_startup.bit
3) In bash, within the orca/zedboard/ directory, enter the command
  make trigger_bitstream
4) Program the device using out.bit in the orca/zedboard directory, as well as the debug
nets in the orca/zedboard/project/project.runs/impl1/ subdirectory. 
